Le differenze principali che troviamo tra il gantt preventivo e il consuntivo sono che abbiamo 

Ci sono varie differenze tra il gantt consuntivo e il preventivo, abbiamo prolungato alcune attività che ci aspettavamo ci prendessero meno tempo come per esempio schema ER, UML, activity diagram e in generale le fasi di progettazione. Abbiamo pensato ad un workflow diverso da quello che abbiamo utilizzato, pensavamo di partire con le impostazioni, salvare le statistiche e la possibilità di entrare nella stanza, ancora prima di effettivamente pensare a come sviluppare il core dell'applicativo, nonché la tastiera funzionante in corrispondenza delle frasi che venivano visualizzate a schermo. Allo stesso tempo però abbiamo iniziato a lavorare su alcune attività che ci aspettavamo di fare negli sprint a venire visto il tempo a disposizione, come per esempio l'implementazione di versioni temporanee per il login, la creazione delle pagine del single player e del frontend. Nel gantt consuntivo siamo stati più precisi su come abbiamo gestito il tempo, e abbiamo inserito tutte le attività svolte come per esempio l'implementazione delle singole pagine all'MVC, la sistemazione di alcune problematiche, lo studio di alcune tecnologie, deploy, ecc... Anche la sezione delle impostazioni che programmavamo di fare subito l'abbiamo suddivisa man mano che procedevamo con l'applicativo. Abbiamo suddiviso al meglio tutte le task definendo bene cosa concerne la sezione del multiplayer e quali implementazioni dovevano essere fatte per effettivamente sviluppare il multiplayer, lo stesso con i punteggi, storico delle statistiche, audio, frasi, test, login/logout, ecc...

In conclusione i due gantt sono ben diversi. Nel primo non abbiamo pensato a tutto ciò che andava fatto per sviluppare l'applicativo e alle tempistiche che avremmo dovuto dedicare a tutte le task.

Ci sono varie differenze tra il gantt preventivo e il consuntivo, inizialmente pensavamo che saremmo riusciti a svolgere sia la fase di progettazione che quella di implementazione più in fretta, non abbiamo considerato molti fattori e abbiamo anche organizzato nel modo sbagliato il workflow. Pensavamo di suddividere tutta l'implementazione in sezioni, il che sarebbe ottimale ma purtroppo non realistico, perlomeno non nel nostro primo progetto in team. Ci sono state varie sezioni sulle quali abbiamo lavorato per molto tempo, riprendendole in alcuni sprint, questo perché modificando alcune fasi dell'implementazione finivamo per non far funzionare altre sezioni già svolte in passato. Quindi varie sezioni dell'applicativo sono state in continuo miglioramento, non come previsto nel gantt preventivo. Passando ai dati abbiamo previsto una fase di implementazione di 90 ore, 90 ore che abbiamo raggiunto già solo nel secondo sprint... In totale per l'implementazione abbiamo impiegato 150 ore, questo perché nelle fasi di implementazione abbiamo anche considerato alcune ore passate a documentarci sulle tecnologie utilizzate, chiaramente non è l'unico motivo per il quale abbiamo impiegato tutte queste ore per il nostro progetto, ma anche perché abbiamo riscontrato delle difficoltà nello sviluppo del codice, che non avevamo previsto in fase di progettazione. I primi ostacoli che abbiamo riscontrato sono stati nel primo sprint, tra schema ER, l'autenticazione dell'utente, l'activity e praticamente per tutte le attività di abbiamo impiegato il doppio e anche il triplo del tempo che ci aspettavamo in fase di progettazione. 
Non abbiamo suddiviso le attività essendo che abbiamo deciso di suddividere la nostra pianificazione a Sprint, e non solo in fasi quali Progettazione, Implementazione e Documentazione. Scelta fatta per una facilità di comunicazione con il Product Owner, e per facilitare un ipotetica dimostrazione delle ore impiegate per un riscontro remunerativo.  